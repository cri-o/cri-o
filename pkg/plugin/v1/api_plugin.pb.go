//go:build tinygo.wasm

// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin [stripped]
// 	protoc               [stripped]
// source: pkg/plugin/v1/api.proto

package v1

import (
	context "context"
	wasm "github.com/knqyf263/go-plugin/wasm"
)

const ServicePluginAPIVersion = 1

//export service_api_version
func _service_api_version() uint64 {
	return ServicePluginAPIVersion
}

var service Service

func RegisterService(p Service) {
	service = p
}

//export service_rpc
func _service_rpc(ptr, size uint32) uint64 {
	b := wasm.PtrToByte(ptr, size)
	req := new(RPCRequest)
	if err := req.UnmarshalVT(b); err != nil {
		return 0
	}
	response, err := service.RPC(context.Background(), req)
	if err != nil {
		ptr, size = wasm.ByteToPtr([]byte(err.Error()))
		return (uint64(ptr) << uint64(32)) | uint64(size) |
			// Indicate that this is the error string by setting the 32-th bit, assuming that
			// no data exceeds 31-bit size (2 GiB).
			(1 << 31)
	}

	b, err = response.MarshalVT()
	if err != nil {
		return 0
	}
	ptr, size = wasm.ByteToPtr(b)
	return (uint64(ptr) << uint64(32)) | uint64(size)
}
