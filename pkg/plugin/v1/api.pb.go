// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin [stripped]
// 	protoc               [stripped]
// source: pkg/plugin/v1/api.proto

package v1

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RPCRequest_Type int32

const (
	// Unspecified type (unused for now).
	RPCRequest_TYPE_UNSPECIFIED RPCRequest_Type = 0
	// The plugin will be executed before the CRI RPC.
	RPCRequest_TYPE_PRE RPCRequest_Type = 1
	// The plugin will be executed during the CRI RPC.
	RPCRequest_TYPE_INTRA RPCRequest_Type = 2
	// The plugin will be executed after the CRI RPC.
	RPCRequest_TYPE_POST RPCRequest_Type = 3
)

// Enum value maps for RPCRequest_Type.
var (
	RPCRequest_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_PRE",
		2: "TYPE_INTRA",
		3: "TYPE_POST",
	}
	RPCRequest_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_PRE":         1,
		"TYPE_INTRA":       2,
		"TYPE_POST":        3,
	}
)

func (x RPCRequest_Type) Enum() *RPCRequest_Type {
	p := new(RPCRequest_Type)
	*p = x
	return p
}

type RPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of this plugin call.
	Type RPCRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=plugin.v1.RPCRequest_Type" json:"type,omitempty"`
	// The RPC method, for example:
	// /runtime.v1.RuntimeService/Version
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// The encoded JSON bytes, which can be:
	// - The original CRI request if type is TYPE_PRE
	// - Any data if type == TYPE_INTRA
	// - The original CRI response if type is TYPE_POST
	Json []byte `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`
	// An existing error.
	Error string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RPCRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *RPCRequest) GetType() RPCRequest_Type {
	if x != nil {
		return x.Type
	}
	return RPCRequest_TYPE_UNSPECIFIED
}

func (x *RPCRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RPCRequest) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *RPCRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The new modified JSON bytes.
	Json []byte `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	// The new error.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RPCResponse) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *RPCResponse) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *RPCResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// go:plugin type=plugin version=1
type Service interface {
	RPC(context.Context, *RPCRequest) (*RPCResponse, error)
}
