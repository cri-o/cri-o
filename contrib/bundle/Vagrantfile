# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2204"
  memory = 6144
  cpus = 4

  config.vm.provider :virtualbox do |v|
    v.memory = memory
    v.cpus = cpus
  end

  config.vm.provider :libvirt do |v|
    v.memory = memory
    v.cpus = cpus
  end

  config.vm.synced_folder "../../", "/vagrant"

  config.vm.provision "install-dependencies", type: "shell", run: "once" do |sh|
    sh.inline = <<~SHELL
      set -euxo pipefail

      # Use a non-localhost DNS to avoid cluster DNS lookup loops
      echo "nameserver 8.8.8.8" > /etc/resolv.conf

      # CRI-O
      pushd /vagrant
      source contrib/bundle/vars
      pushd "$ARCHIVE_PATH"
      tar xfvz "$ARCHIVE"
      pushd cri-o
      ./install
      systemctl enable --now crio.service

      # Kubernetes
      KUBERNETES_VERSION=v1.28
      curl -fsSL https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl

      # Cluster
      IP=`ip route get 1.2.3.4 | cut -d ' ' -f7 | tr -d '[:space:]'`
      NODENAME=$(hostname -s)
      swapoff -a
      modprobe br_netfilter
      sysctl -w net.ipv4.ip_forward=1
      kubeadm init --apiserver-cert-extra-sans=$IP --node-name $NODENAME

      # Check cluster
      export KUBECONFIG=/etc/kubernetes/admin.conf
      kubectl taint nodes --all node-role.kubernetes.io/control-plane-
      kubectl wait -n kube-system --timeout=180s --for=condition=available deploy coredns
      kubectl wait --timeout=180s --for=condition=ready pods --all -A
      kubectl get pods -A
      kubectl run -i --restart=Never --image debian --rm debian -- echo test | grep test
    SHELL
  end
end
