---

# When swap setup is necessary, make it this size
swapfileGB: 8

# When False, turn off all swapping on the system during indicated test.
integration_swap_enabled: False
e2e_swap_enabled: True

# When False, disable SELinux on the system only during
# particular tests.
integration_selinux_enabled: True
e2e_selinux_enabled: False

# Base directory for all go-related source, build, and install.
go_path: "/go"

# Absolute path on control-host where the cri-o source exists
cri_o_src_path: "{{ playbook_dir }}/../../../"

# Absolute path on subjects where cri-o source is expected
cri_o_dest_path: "{{ go_path }}/src/github.com/kubernetes-incubator/cri-o"

# For results.yml Paths use rsync 'source' conventions
artifacts: "/tmp/artifacts"  # Base-directory for collection

# List of absolute paths to extra filenames to collect into {{ artifacts }}.
# Non-existing files and any name-collisions will be skipped.
extra_artifact_filepaths:
    - "/go/src/k8s.io/kubernetes/e2e.log"
    - "/tmp/kubelet.log"
    - "/tmp/kube-apiserver.log"
    - "/tmp/kube-controller-manager.log"
    - "/tmp/kube-proxy.log"
    - "/tmp/kube-proxy.yaml"
    - "/tmp/kube-scheduler.log"

# Mapping of generated artifact filenames and their commands.  All
# are relative to {{ artifacts }}/generated/
generated_artifacts:
    installed_packages.log: '$(type -P dnf || type -P yum) list installed'
    avc_denials.log: 'ausearch -m AVC -m SELINUX_ERR -m USER_AVC'
    filesystem.info: 'df -h && sudo pvs && sudo vgs && sudo lvs'
    pid1.journal: 'journalctl _PID=1 --no-pager --all --lines=all'
    crio.service: 'journalctl --unit crio.service --no-pager --all --lines=all'
    customcluster.service: 'journalctl --unit customcluster.service --no-pager --all --lines=all'
    systemd-journald.service: 'journalctl --unit systemd-journald.service --no-pager --all --lines=all'

# Use ``parse2junits.py`` on these artifact files
# to produce the '{{ canonical_junit }}' file.
parsed_artifacts:
    - "./testout.txt"
    - "./junit_01.xml"

# jUnit artifact file for ``combine_junits.py`` output
canonical_junit: "./junit_01.xml"

# When subject != localhost, synchronize "{{ artifacts }}" from
# all subjects into this directory on the control-host.
collection_dirpath: '{{ lookup("env","WORKSPACE") |
                        default(playbook_dir, True) }}/artifacts/{{ inventory_hostname }}'
