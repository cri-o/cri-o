---

- name: stat the expected cri-o directory
  stat:
    path: "{{ ansible_env.GOPATH }}/src/github.com/cri-o/cri-o"
  register: dir_stat

- name: expect cri-o to be cloned already
  fail:
    msg: "Expected cri-o to be cloned at {{ ansible_env.GOPATH }}/src/github.com/cri-o/cri-o but it wasn't!"
  when: not dir_stat.stat.exists

- name: build cri-o
  make:
    chdir: "{{ ansible_env.GOPATH }}/src/github.com/cri-o/cri-o"

- name: link pinns
  file:
    src: "{{ ansible_env.GOPATH }}/src/github.com/cri-o/cri-o/bin/pinns"
    dest: "/bin/pinns"
    state: link

- name: set RestartPolicy in systemd unit appropriate for tests
  lineinfile:
    path: "{{ ansible_env.GOPATH }}/src/github.com/cri-o/cri-o/contrib/systemd/crio.service"
    regexp: '^Restart='
    line: 'Restart=no'

- name: install cri-o
  make:
    target: install
    chdir: "{{ ansible_env.GOPATH }}/src/github.com/cri-o/cri-o"

- name: set manage network ns lifecycle and drop infra
  copy:
    dest: /etc/crio/crio.conf.d/01-ns-lifecycle.conf
    content: |
      [crio.runtime]
      manage_ns_lifecycle = true
      drop_infra_ctr = true

- name: use crun
  copy:
    dest: /etc/crio/crio.conf.d/01-crun.conf
    content: |
      [crio.runtime]
      default_runtime = "crun"
      [crio.runtime.runtimes.crun]
  when: "build_crun | default(False) | bool"

- name: use kata
  copy:
    dest: /etc/crio/crio.conf.d/50-kata.conf
    content: |
      [crio.runtime]
      default_runtime = "kata"
      [crio.runtime.runtimes.kata]
      runtime_path = "/usr/bin/containerd-shim-kata-v2"
      runtime_type = "vm"
      runtime_root = "/run/vc"
  when: "build_kata | default(False) | bool"

- name: install configs
  copy:
    src: "{{ ansible_env.GOPATH }}/src/github.com/cri-o/cri-o/{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  with_items:
    - src: contrib/cni/10-crio-bridge.conf
      dest: /etc/cni/net.d/10-crio-bridge.conf
    - src: contrib/cni/99-loopback.conf
      dest: /etc/cni/net.d/99-loopback.conf
    - src: test/redhat_sigstore.yaml
      dest: /etc/containers/registries.d/registry.access.redhat.com.yaml

- name: run with overlay
  copy:
    dest: /etc/crio/crio.conf.d/01-overlay.conf
    content: |
      [crio]
      storage_driver = "overlay"

- name: add quay.io and docker.io as default registries
  copy:
    dest: /etc/containers/registries.conf
    content: |
      unqualified-search-registries = [ "quay.io", "docker.io" ]

- name: remove storage.conf to avoid configuration conflicts
  file:
    path: /etc/containers/storage.conf
    state: absent
