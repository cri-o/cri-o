---
# only fixup paths for e2e tests which expect to be able to pass 'test-handler' as the runtime handler
- name: add test-handler runtime handler for Runtimes test
  become: yes
  blockinfile:
    path: /etc/crio/crio.conf
    insertbefore: .*crio.runtime.runtimes.runc.*
    backup: yes
    block: |
        [crio.runtime.runtimes.test-handler]
        runtime_path = "/usr/bin/runc"
        runtime_type = "oci"
        runtime_root = "/run/runc"

- name: create ssh keys
  shell: ssh-keygen -b 2048 -t rsa -f "{{ ssh_location }}" -q -N ""
  args:
    creates: "{{ ssh_location }}"

- name: add key file to authorized_users
  authorized_key:
    user: "{{ ssh_user }}"
    state: present
    key: "{{ lookup('file', ssh_location + '.pub') }} "

- name: enable and start CRI-O
  become: yes
  systemd:
    name: crio
    state: started
    enabled: yes
    daemon_reload: yes

- name: update the server address for the custom cluster
  become: yes
  lineinfile:
    dest: /usr/local/bin/createcluster.sh
    line: |
        # Added by Ansible from e2e.yml
        export {{ item }}={{ ansible_default_ipv4.address }}
    regexp: "^export {{ item }}="
    state: present
  with_items:
    - DNS_SERVER_IP
    - API_HOST
    - API_HOST_IP

- name: enable and start the custom cluster
  become: yes
  systemd:
    name: customcluster.service
    state: started
    enabled: yes
    daemon_reload: yes

- name: wait for the cluster to be running
  # ref: https://kubernetes.io/docs/reference/kubectl/cheatsheet/
  become: yes
  ansible.builtin.shell:
    cmd: /usr/bin/kubectl get nodes -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' | grep 'Ready=True'
  environment:
    KUBECONFIG: /var/run/kubernetes/admin.kubeconfig
  register: kube_poll
  until: kube_poll.rc == 0
  retries: 100
  delay: 30

- name: ensure directory exists for e2e reports
  file:
    path: "{{ artifacts }}"
    state: directory

- name: upgrade git package
  yum:
    name: 'git'
    state: latest
  when: ansible_distribution in ['RedHat']

- name: load br_netfilter module
  become: yes
  command: modprobe br_netfilter

- name: Enable iptables NAT for the bridge
  become: yes
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present
