---
version: 2.1

stdenv: &stdenv
  environment:
    GOCACHE: &gocache /tmp/go-build
    IMAGE: &image quay.io/crio/circle-1.12:1.2.0
    IMAGELEGACY: &imagelegacy quay.io/crio/circle-1.10:1.2.0
    JOBS: &jobs 8
    WORKDIR: &workdir /go/src/github.com/cri-o/cri-o

executors:
  container:
    docker:
      - image: *image
        user: circleci
    <<: *stdenv
    working_directory: *workdir

  container-legacy:
    docker:
      - image: *imagelegacy
        user: circleci
    <<: *stdenv
    working_directory: *workdir

  container-base:
    docker:
      - image: circleci/golang:1.12
    <<: *stdenv
    working_directory: *workdir

  nix:
    docker:
      - image: saschagrunert/crionix:1.0.0

  machine:
    machine:
      docker_layer_caching: true
      image: ubuntu-1604:201903-01
    <<: *stdenv

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - build:
          name: build-legacy
          executor: container-legacy
      - build-static
      - build-test-binaries
      - bundle:
          requires:
            - build
            - build-static
      - docs-validation
      - ginkgo
      - git-validation
      - integration:
          requires:
            - build
            - build-test-binaries
      - integration:
          name: integration-critest
          run_critest: '1'
          test_args: critest.bats
          requires:
            - build
            - build-test-binaries
            - ginkgo
      - integration:
          name: integration-userns
          test_userns: '1'
          requires:
            - build
            - build-test-binaries
      - integration:
          name: integration-static-glibc
          crio_binary: crio-x86_64-static-glibc
          requires:
            - build
            - build-static
            - build-test-binaries
      - integration:
          name: integration-static-musl
          crio_binary: crio-x86_64-static-musl
          requires:
            - build
            - build-static
            - build-test-binaries
      - lint
      - results:
          requires:
            - bundle
            - integration
            - integration-critest
            - integration-static-glibc
            - integration-static-musl
            - integration-userns
            - unit-tests
      - unit-tests:
          requires:
            - ginkgo
      - vendor

jobs:
  build:
    parameters:
      executor:
        type: string
        default: container
    executor: << parameters.executor >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-build-<< parameters.executor >>-{{ checksum "go.sum" }}
      - run: go version
      - run:
          name: build
          command: make -j $JOBS
      - save_cache:
          key: v1-build-<< parameters.executor >>-{{ checksum "go.sum" }}
          paths:
            - *gocache
            - build/bin/go-md2man
      - persist_to_workspace:
          root: .
          paths:
            - bin
            - crio.conf
            - docs

  build-static:
    executor: nix
    steps:
      - checkout
      - run:
          name: build
          command: |
            nix-build nix --argstr revision $CIRCLE_SHA1
            mkdir -p bin
            cp result-*bin/bin/crio-* bin
            cp result-*bin/libexec/crio/* bin
      - persist_to_workspace:
          root: .
          paths:
            - bin

  build-test-binaries:
    executor: container
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-build-test-binaries-{{ checksum "go.sum" }}
      - run:
          name: build
          command: make test-binaries -j $JOBS
      - save_cache:
          key: v1-build-test-binaries-{{ checksum "go.sum" }}
          paths:
            - *gocache
      - persist_to_workspace:
          root: .
          paths:
            - test/bin2img/bin2img
            - test/checkseccomp/checkseccomp
            - test/copyimg/copyimg

  bundle:
    executor: container
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: bundle
          command: make bundle
      - persist_to_workspace:
          root: .
          paths:
            - bundle/*.tar.gz

  docs-validation:
    executor: container
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-docs-validation-{{ checksum "go.sum" }}
      - run:
          name: doc validation
          command: make docs-validation
      - save_cache:
          key: v1-docs-validation-{{ checksum "go.sum" }}
          paths:
            - *gocache

  ginkgo:
    executor: container
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ginkgo-{{ checksum "go.sum" }}
      - run:
          name: build ginkgo
          command: make $(pwd)/build/bin/ginkgo
      - save_cache:
          key: v1-ginkgo-{{ checksum "go.sum" }}
          paths:
            - *gocache
            - build/bin/ginkgo
      - persist_to_workspace:
          root: .
          paths:
            - build/bin/ginkgo

  git-validation:
    executor: container
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-git-validation-{{ checksum "go.sum" }}
      - run:
          name: git validation
          command: make git-validation
      - save_cache:
          key: v1-git-validation-{{ checksum "go.sum" }}
          paths:
            - *gocache
            - build/bin/git-validation

  integration:
    executor: machine
    parameters:
      crio_binary:
        type: string
        default: crio
      run_critest:
        type: string
        default: ''
      test_args:
        type: string
        default: ''
      test_userns:
        type: string
        default: ''
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: integration test
          command: |
            sudo ip6tables --list >/dev/null # enable necessary kernel modules
            docker pull $IMAGE
            docker run \
              --privileged \
              --rm \
              --sysctl net.ipv6.conf.all.disable_ipv6=0 \
              -e CI=true \
              -e CRIO_BINARY \
              -e RUN_CRITEST \
              -e STORAGE_OPTIONS="-s=vfs" \
              -e TEST_USERNS \
              -v $(pwd)/build/bin/ginkgo:/usr/bin/ginkgo \
              -v $(pwd):$WORKDIR \
              -w $WORKDIR \
              $IMAGE \
              test/test_runner.sh $TEST_ARGS
          environment:
            CRIO_BINARY: "<< parameters.crio_binary >>"
            RUN_CRITEST: "<< parameters.run_critest >>"
            TEST_ARGS: "<< parameters.test_args >>"
            TEST_USERNS: "<< parameters.test_userns >>"

  lint:
    executor: machine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-golangci-lint-{{ checksum "go.sum" }}
      - run:
          name: lint
          command: |
            docker pull $IMAGE
            docker run --privileged --rm -e GOCACHE \
              -v $GOCACHE:$GOCACHE -v $(pwd):$WORKDIR \
              -w $WORKDIR $IMAGE make lint
            sudo chown -R $(id -u):$(id -g) $GOCACHE
      - save_cache:
          key: v1-golangci-lint-{{ checksum "go.sum" }}
          paths:
            - *gocache
            - build/bin/golangci-lint

  results:
    executor: container-base
    steps:
      - attach_workspace:
          at: .
      - store_test_results:
          path: build/junit
      - store_artifacts:
          path: bin
          destination: bin
      - store_artifacts:
          path: build
          destination: test
      - store_artifacts:
          path: bundle
          destination: bundle

  unit-tests:
    executor: container
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-unit-tests-{{ checksum "go.sum" }}
      - run:
          name: check mocks
          command: |
            make mockgen -j $JOBS
            hack/tree_status.sh
      - run:
          name: unit tests
          command: make testunit
      - run:
          name: code coverage
          command: make codecov
      - store_test_results:
          path: build/junit
      - save_cache:
          key: v1-unit-tests-{{ checksum "go.sum" }}
          paths:
            - *gocache
            - build/bin/mockgen
      - persist_to_workspace:
          root: .
          paths:
            - build/coverage
            - build/junit

  vendor:
    executor: container-base
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-vendor-{{ checksum "go.sum" }}
      - run:
          name: check vendoring
          command: |
            make vendor
            hack/tree_status.sh
      - save_cache:
          key: v1-vendor-{{ checksum "go.sum" }}
          paths:
            - /go/pkg
