package(default_visibility = ["//visibility:public"])

licenses(["notice"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_library(
    name = "go_default_library",
    srcs = [
        "active_deadline.go",
        "disk_manager.go",
        "doc.go",
        "kubelet.go",
        "kubelet_cadvisor.go",
        "kubelet_getters.go",
        "kubelet_network.go",
        "kubelet_node_status.go",
        "kubelet_pods.go",
        "kubelet_resources.go",
        "kubelet_volumes.go",
        "networks.go",
        "oom_watcher.go",
        "pod_container_deletor.go",
        "pod_workers.go",
        "reason_cache.go",
        "runonce.go",
        "runtime.go",
        "util.go",
        "volume_host.go",
    ],
    tags = ["automanaged"],
    deps = [
        "//cmd/kubelet/app/options:go_default_library",
        "//pkg/api:go_default_library",
        "//pkg/api/v1:go_default_library",
        "//pkg/api/v1/pod:go_default_library",
        "//pkg/api/v1/validation:go_default_library",
        "//pkg/apis/componentconfig:go_default_library",
        "//pkg/apis/componentconfig/v1alpha1:go_default_library",
        "//pkg/capabilities:go_default_library",
        "//pkg/client/clientset_generated/clientset:go_default_library",
        "//pkg/client/listers/core/v1:go_default_library",
        "//pkg/cloudprovider:go_default_library",
        "//pkg/features:go_default_library",
        "//pkg/fieldpath:go_default_library",
        "//pkg/kubelet/api:go_default_library",
        "//pkg/kubelet/cadvisor:go_default_library",
        "//pkg/kubelet/cm:go_default_library",
        "//pkg/kubelet/config:go_default_library",
        "//pkg/kubelet/container:go_default_library",
        "//pkg/kubelet/dockershim:go_default_library",
        "//pkg/kubelet/dockershim/remote:go_default_library",
        "//pkg/kubelet/dockertools:go_default_library",
        "//pkg/kubelet/envvars:go_default_library",
        "//pkg/kubelet/events:go_default_library",
        "//pkg/kubelet/eviction:go_default_library",
        "//pkg/kubelet/gpu:go_default_library",
        "//pkg/kubelet/gpu/nvidia:go_default_library",
        "//pkg/kubelet/images:go_default_library",
        "//pkg/kubelet/kuberuntime:go_default_library",
        "//pkg/kubelet/lifecycle:go_default_library",
        "//pkg/kubelet/metrics:go_default_library",
        "//pkg/kubelet/network:go_default_library",
        "//pkg/kubelet/pleg:go_default_library",
        "//pkg/kubelet/pod:go_default_library",
        "//pkg/kubelet/preemption:go_default_library",
        "//pkg/kubelet/prober:go_default_library",
        "//pkg/kubelet/prober/results:go_default_library",
        "//pkg/kubelet/qos:go_default_library",
        "//pkg/kubelet/remote:go_default_library",
        "//pkg/kubelet/rkt:go_default_library",
        "//pkg/kubelet/secret:go_default_library",
        "//pkg/kubelet/server:go_default_library",
        "//pkg/kubelet/server/portforward:go_default_library",
        "//pkg/kubelet/server/remotecommand:go_default_library",
        "//pkg/kubelet/server/stats:go_default_library",
        "//pkg/kubelet/server/streaming:go_default_library",
        "//pkg/kubelet/status:go_default_library",
        "//pkg/kubelet/sysctl:go_default_library",
        "//pkg/kubelet/types:go_default_library",
        "//pkg/kubelet/util:go_default_library",
        "//pkg/kubelet/util/format:go_default_library",
        "//pkg/kubelet/util/queue:go_default_library",
        "//pkg/kubelet/util/sliceutils:go_default_library",
        "//pkg/kubelet/volumemanager:go_default_library",
        "//pkg/security/apparmor:go_default_library",
        "//pkg/securitycontext:go_default_library",
        "//pkg/util:go_default_library",
        "//pkg/util/bandwidth:go_default_library",
        "//pkg/util/dbus:go_default_library",
        "//pkg/util/exec:go_default_library",
        "//pkg/util/io:go_default_library",
        "//pkg/util/iptables:go_default_library",
        "//pkg/util/mount:go_default_library",
        "//pkg/util/node:go_default_library",
        "//pkg/util/oom:go_default_library",
        "//pkg/util/procfs:go_default_library",
        "//pkg/util/term:go_default_library",
        "//pkg/version:go_default_library",
        "//pkg/volume:go_default_library",
        "//pkg/volume/util:go_default_library",
        "//pkg/volume/util/types:go_default_library",
        "//pkg/volume/util/volumehelper:go_default_library",
        "//plugin/pkg/scheduler/algorithm/predicates:go_default_library",
        "//third_party/forked/golang/expansion:go_default_library",
        "//vendor:github.com/golang/glog",
        "//vendor:github.com/golang/groupcache/lru",
        "//vendor:github.com/google/cadvisor/events",
        "//vendor:github.com/google/cadvisor/info/v1",
        "//vendor:github.com/google/cadvisor/info/v2",
        "//vendor:k8s.io/apimachinery/pkg/api/errors",
        "//vendor:k8s.io/apimachinery/pkg/api/resource",
        "//vendor:k8s.io/apimachinery/pkg/apis/meta/v1",
        "//vendor:k8s.io/apimachinery/pkg/conversion",
        "//vendor:k8s.io/apimachinery/pkg/fields",
        "//vendor:k8s.io/apimachinery/pkg/labels",
        "//vendor:k8s.io/apimachinery/pkg/types",
        "//vendor:k8s.io/apimachinery/pkg/util/errors",
        "//vendor:k8s.io/apimachinery/pkg/util/net",
        "//vendor:k8s.io/apimachinery/pkg/util/runtime",
        "//vendor:k8s.io/apimachinery/pkg/util/sets",
        "//vendor:k8s.io/apimachinery/pkg/util/validation",
        "//vendor:k8s.io/apimachinery/pkg/util/validation/field",
        "//vendor:k8s.io/apimachinery/pkg/util/wait",
        "//vendor:k8s.io/apiserver/pkg/util/feature",
        "//vendor:k8s.io/client-go/kubernetes",
        "//vendor:k8s.io/client-go/kubernetes/typed/core/v1",
        "//vendor:k8s.io/client-go/pkg/api/v1",
        "//vendor:k8s.io/client-go/tools/cache",
        "//vendor:k8s.io/client-go/tools/record",
        "//vendor:k8s.io/client-go/util/clock",
        "//vendor:k8s.io/client-go/util/flowcontrol",
        "//vendor:k8s.io/client-go/util/integer",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "active_deadline_test.go",
        "disk_manager_test.go",
        "kubelet_cadvisor_test.go",
        "kubelet_getters_test.go",
        "kubelet_network_test.go",
        "kubelet_node_status_test.go",
        "kubelet_pods_test.go",
        "kubelet_resources_test.go",
        "kubelet_test.go",
        "kubelet_volumes_test.go",
        "oom_watcher_test.go",
        "pod_container_deletor_test.go",
        "pod_workers_test.go",
        "reason_cache_test.go",
        "runonce_test.go",
    ],
    library = ":go_default_library",
    tags = ["automanaged"],
    deps = [
        "//pkg/api:go_default_library",
        "//pkg/api/v1:go_default_library",
        "//pkg/apis/componentconfig:go_default_library",
        "//pkg/capabilities:go_default_library",
        "//pkg/client/clientset_generated/clientset/fake:go_default_library",
        "//pkg/kubelet/cadvisor/testing:go_default_library",
        "//pkg/kubelet/cm:go_default_library",
        "//pkg/kubelet/config:go_default_library",
        "//pkg/kubelet/container:go_default_library",
        "//pkg/kubelet/container/testing:go_default_library",
        "//pkg/kubelet/eviction:go_default_library",
        "//pkg/kubelet/gpu:go_default_library",
        "//pkg/kubelet/images:go_default_library",
        "//pkg/kubelet/lifecycle:go_default_library",
        "//pkg/kubelet/network:go_default_library",
        "//pkg/kubelet/network/testing:go_default_library",
        "//pkg/kubelet/pleg:go_default_library",
        "//pkg/kubelet/pod:go_default_library",
        "//pkg/kubelet/pod/testing:go_default_library",
        "//pkg/kubelet/prober/results:go_default_library",
        "//pkg/kubelet/prober/testing:go_default_library",
        "//pkg/kubelet/secret:go_default_library",
        "//pkg/kubelet/server/portforward:go_default_library",
        "//pkg/kubelet/server/remotecommand:go_default_library",
        "//pkg/kubelet/server/stats:go_default_library",
        "//pkg/kubelet/status:go_default_library",
        "//pkg/kubelet/status/testing:go_default_library",
        "//pkg/kubelet/types:go_default_library",
        "//pkg/kubelet/util/queue:go_default_library",
        "//pkg/kubelet/util/sliceutils:go_default_library",
        "//pkg/kubelet/volumemanager:go_default_library",
        "//pkg/util/bandwidth:go_default_library",
        "//pkg/util/mount:go_default_library",
        "//pkg/version:go_default_library",
        "//pkg/volume:go_default_library",
        "//pkg/volume/host_path:go_default_library",
        "//pkg/volume/testing:go_default_library",
        "//pkg/volume/util/volumehelper:go_default_library",
        "//vendor:github.com/google/cadvisor/info/v1",
        "//vendor:github.com/google/cadvisor/info/v2",
        "//vendor:github.com/stretchr/testify/assert",
        "//vendor:github.com/stretchr/testify/require",
        "//vendor:k8s.io/apimachinery/pkg/api/equality",
        "//vendor:k8s.io/apimachinery/pkg/api/errors",
        "//vendor:k8s.io/apimachinery/pkg/api/resource",
        "//vendor:k8s.io/apimachinery/pkg/apis/meta/v1",
        "//vendor:k8s.io/apimachinery/pkg/labels",
        "//vendor:k8s.io/apimachinery/pkg/runtime",
        "//vendor:k8s.io/apimachinery/pkg/types",
        "//vendor:k8s.io/apimachinery/pkg/util/diff",
        "//vendor:k8s.io/apimachinery/pkg/util/rand",
        "//vendor:k8s.io/apimachinery/pkg/util/runtime",
        "//vendor:k8s.io/apimachinery/pkg/util/sets",
        "//vendor:k8s.io/apimachinery/pkg/util/strategicpatch",
        "//vendor:k8s.io/apimachinery/pkg/util/uuid",
        "//vendor:k8s.io/apimachinery/pkg/util/wait",
        "//vendor:k8s.io/client-go/pkg/api/v1",
        "//vendor:k8s.io/client-go/testing",
        "//vendor:k8s.io/client-go/tools/record",
        "//vendor:k8s.io/client-go/util/clock",
        "//vendor:k8s.io/client-go/util/flowcontrol",
        "//vendor:k8s.io/client-go/util/testing",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//pkg/kubelet/api:all-srcs",
        "//pkg/kubelet/cadvisor:all-srcs",
        "//pkg/kubelet/certificate:all-srcs",
        "//pkg/kubelet/client:all-srcs",
        "//pkg/kubelet/cm:all-srcs",
        "//pkg/kubelet/config:all-srcs",
        "//pkg/kubelet/container:all-srcs",
        "//pkg/kubelet/custommetrics:all-srcs",
        "//pkg/kubelet/dockershim:all-srcs",
        "//pkg/kubelet/dockertools:all-srcs",
        "//pkg/kubelet/envvars:all-srcs",
        "//pkg/kubelet/events:all-srcs",
        "//pkg/kubelet/eviction:all-srcs",
        "//pkg/kubelet/gpu:all-srcs",
        "//pkg/kubelet/images:all-srcs",
        "//pkg/kubelet/kuberuntime:all-srcs",
        "//pkg/kubelet/leaky:all-srcs",
        "//pkg/kubelet/lifecycle:all-srcs",
        "//pkg/kubelet/metrics:all-srcs",
        "//pkg/kubelet/network:all-srcs",
        "//pkg/kubelet/pleg:all-srcs",
        "//pkg/kubelet/pod:all-srcs",
        "//pkg/kubelet/preemption:all-srcs",
        "//pkg/kubelet/prober:all-srcs",
        "//pkg/kubelet/qos:all-srcs",
        "//pkg/kubelet/remote:all-srcs",
        "//pkg/kubelet/rkt:all-srcs",
        "//pkg/kubelet/rktshim:all-srcs",
        "//pkg/kubelet/secret:all-srcs",
        "//pkg/kubelet/server:all-srcs",
        "//pkg/kubelet/status:all-srcs",
        "//pkg/kubelet/sysctl:all-srcs",
        "//pkg/kubelet/types:all-srcs",
        "//pkg/kubelet/util:all-srcs",
        "//pkg/kubelet/volumemanager:all-srcs",
    ],
    tags = ["automanaged"],
)
