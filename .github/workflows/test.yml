name: test
on:
  push:
    tags:
      - v*
    branches:
      - master
      - release-*
  pull_request:
env:
  GO_VERSION: '1.16'
  GO_VERSION_LEGACY: '1.14'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-
      - run: scripts/github-actions-packages
      - run: make
      - run: bin/crio version
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            bin/crio
            bin/crio-status
      - uses: actions/upload-artifact@v2
        with:
          name: docs
          path: |
            docs/crio-status.8
            docs/crio.8
            docs/crio.conf.5
            docs/crio.conf.d.5
      - uses: actions/upload-artifact@v2
        with:
          name: config
          path: crio.conf

  build-go1_14:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION_LEGACY }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-build-legacy-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-legacy-
      - run: scripts/github-actions-packages
      - run: make
      - run: bin/crio version

  build-386:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-build-386-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-386-
      - name: Build 386 binary in container
        run: |
          mkdir -p ~/.cache/go-build ~/go/pkg/mod
          sudo podman run \
            -v ~/go/pkg/mod:/go/pkg/mod \
            -v ~/.cache/go-build:/root/.cache/go-build \
            -v $PWD:/build \
            -w /build \
            -it i386/golang:${{ env.GO_VERSION }}-alpine \
            sh -c \
              "apk --no-cache add \
                bash \
                build-base \
                gpgme-dev \
                libseccomp-dev \
                libselinux-dev \
                linux-headers \
                tzdata && \
              make bin/crio && \
              bin/crio version"

  validate-docs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: bin
      - run: |
          chmod -R +x bin
          sudo rm /etc/containers/storage.conf
      - run: |
          make docs-generation
          hack/tree_status.sh

  validate-completions:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: bin
      - run: |
          chmod -R +x bin
          sudo rm /etc/containers/storage.conf
      - run: |
          make completions-generation
          hack/tree_status.sh

  build-static-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
      - uses: cachix/cachix-action@v10
        with:
          name: cri-o-static
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: cri-o
      - run: nix-build nix
      - run: result/bin/crio version
      - uses: actions/upload-artifact@v2
        with:
          name: build-static-amd64
          path: |
            result/bin/crio
            result/bin/crio-status
            result/bin/pinns

  build-static-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
      - uses: cachix/cachix-action@v10
        with:
          name: cri-o-static
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: cri-o
      - run: nix-build nix/default-arm64.nix
      - run: file result/bin/crio
      - uses: actions/upload-artifact@v2
        with:
          name: build-static-arm64
          path: |
            result/bin/crio
            result/bin/crio-status
            result/bin/pinns

  bundles:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-static-amd64
      - build-static-arm64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-static-amd64
          path: bin/static-amd64
      - uses: actions/download-artifact@v2
        with:
          name: build-static-arm64
          path: bin/static-arm64
      - uses: actions/download-artifact@v2
        with:
          name: docs
          path: docs
      - uses: actions/download-artifact@v2
        with:
          name: config
      - run: chmod -R +x bin
      - run: make bundles
      - uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: build/bundle/*.tar.gz

  bundle-test:
    runs-on: ubuntu-latest
    needs: bundles
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: bundle
          path: build/bundle
      - run: make bundle-test

  bundle-test-e2e:
    runs-on: ubuntu-latest
    needs: bundles
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/download-artifact@v2
        with:
          name: bundle
          path: build/bundle
      - name: Setup system
        run: |
          sudo apt-get remove \
            conmon \
            containernetworking-plugins \
            crun \
            moby-runc
          sudo apt-get install -y conntrack
      - run: make bundle-test-e2e

  upload-artifacts:
    if: github.ref == 'refs/heads/master' || contains(github.ref, 'refs/heads/release') || contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: bundle-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: bundle
          path: build/bundle
      - run: make upload-artifacts
        env:
          GCS_CRIO_SA: ${{ secrets.GCS_CRIO_SA }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-unit-${{ hashFiles('**/go.sum') }}
          restore-keys: go-unit-
      - run: scripts/github-actions-packages
      - run: |
          make mockgen -j $(nproc)
          hack/tree_status.sh
      - run: make testunit
      - uses: actions/upload-artifact@v2
        with:
          name: unit
          path: |
            build/coverage
            build/junit

  coverage:
    needs: unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: unit
          path: build
      - run: make codecov

  release-notes:
    if: github.ref == 'refs/heads/master' || contains(github.ref, 'refs/heads/release') || contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-
      - run: make release-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: release-notes
          path: build/release-notes
          if-no-files-found: ignore

  dependencies:
    if: github.ref == 'refs/heads/master'
    needs: release-notes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-
      - run: make dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: dependencies
          path: build/dependencies

  release-branch-forward:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-
      - run: make release-branch-forward
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          DRY_RUN: false
